;;;;rays.lisp
;;;;

(in-package :ray-tracer)

(defvar ray-min 0.0001)

(defvar ray-max (* 1.0 (expt 10 30)))

(defclass ray ()
  ((origin    :initarg :origin
	      :accessor origin)
   (direction :initarg :direction
	      :accessor direction)
   (t-max     :initarg :t-max
	      :initform ray-max
	      :accessor t-max)))

(defmethod print-object ((obj ray) stream)
  (print-unreadable-object (obj stream :type t)
    (with-accessors ((origin origin)
		     (direction direction)
		     (t-max t-max))
	obj
      (format stream "Origin: (~a, ~a, ~a), Direction: ~a, T-Max: ~a"
	      (x origin) (y origin) (z origin) direction t-max))))

(defun default-ray ()
  (make-instance 'ray :origin (make-instance 'point :x 0.0
						    :y 0.0
						    :z 0.0)
		      :direction (make-instance 'vector :x 0.0
							:y 0.0
							:z 0.0)))
